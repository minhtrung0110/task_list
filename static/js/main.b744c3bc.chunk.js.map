{"version":3,"sources":["components/AppBar/AppBar.js","components/BoardBar/BoardBar.js","components/Card/Card.js","utilities/sorts.js","components/Commom/ConfirmModal.js","components/Column/Column.js","actions/initalData.js","utilities/dragDrop.js","components/BoardContent/BoardContent.js","App.js","reportWebVitals.js","index.js"],"names":["AppBar","props","react_default","a","createElement","className","BoardBar","Card","_ref","card","concat","title","cover","src","alt","index_esm","mapOrder","array","order","key","sort","b","indexOf","ConfirmModal","content","show","onAction","Modal","onHide","Header","closeButton","Title","Body","Footer","Button","variant","onClick","Column","column","onCardDrop","onUpdateColumn","_useState","useState","_useState2","Object","slicedToArray","showConfirmModal","setShowConfirmModal","_useState3","_useState4","columnTitle","setColumnTitle","_useState5","_useState6","isAddCard","setIsAddCard","_useState7","_useState8","valueNewCard","setValueNewCard","newCardRef","useRef","useEffect","cards","cardOrder","handleColumnTitleBlur","newColumn","objectSpread","handleAddCard","newCardToAdd","id","Math","random","toString","substr","boardId","columnId","cloneDeep","push","Form","Control","size","type","placeholder","value","spellCheck","onChange","e","target","focus","select","onBlur","onMouseDown","preventDefault","onKeyDown","event","Dropdown","as","ButtonGroup","Toggle","Menu","Item","dist","groupName","onDrop","dropResult","getChildPayload","index","dragClass","dropClass","dropPlaceholder","animationDuration","showOnTop","dropPlaceholderAnimationDuration","map","item","components_Card_Card","rows","ref","Commom_ConfirmModal","_destroy","initialData","boards","columnOrder","columns","priority","description","applyDrag","arr","dragResult","removedIndex","addedIndex","payload","result","toConsumableArray","itemToAdd","splice","BoardContent","board","setBoard","setColumns","isOpenNewColForm","setIsOpenNewColForm","newColTitle","setNewColTitle","newColInputRef","boardFromDB","find","newColumns","currentColumn","i","console","log","handleAddNewColumn","newColumnToAdd","trim","newBoard","handleUpdateColumn","newColUpdate","columnIndexToUpdate","findIndex","isEmpty","orientation","dragHandleSelector","col","components_Column_Column","Container","Row","Col","App","components_AppBar_AppBar","components_BoardBar_BoardBar","components_BoardContent_BoardContent","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b744c3bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./AppBar.scss\"\r\n\r\nfunction AppBar(props) {\r\n    return (\r\n        <div className=\"navbar-app\"> App bar</div>\r\n    );\r\n}\r\n\r\nexport default AppBar;","import React from 'react';\r\nimport \"./BoardBar.scss\"\r\n\r\nfunction BoardBar(props) {\r\n    return (\r\n        <div className=\"navbar-board\">Board bar </div>\r\n    );\r\n}\r\n\r\nexport default BoardBar;","import React from 'react';\r\nimport  \"./Card.scss\";\r\nimport {FaPen} from \"react-icons/fa\";\r\n\r\nfunction Card({card}) {\r\n    return (\r\n        <div className='card-item d-flex justify-content-between align-items-center'>\r\n           <div className=''>\r\n               <span className='card-title'>{`${card.title}`}</span>\r\n\r\n               { !!card.cover && <img src={card.cover} alt='img'/>}\r\n           </div>\r\n            <FaPen className='btn-edit-card' />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","\r\n\r\nexport const mapOrder =(array,order,key) =>{\r\n    array.sort((a,b) => order.indexOf(a[key]) - order.indexOf(b[key]));\r\n    return array\r\n}","import Button from 'react-bootstrap/Button';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport React from \"react\";\r\n\r\nfunction ConfirmModal({title,content,show,onAction}) {\r\n\r\n    return (\r\n            <Modal show={show} onHide={()=>onAction('close')}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{content}</Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={()=>onAction('close')}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"danger\" onClick={()=>onAction('confirm')}>\r\n                        Confirm\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n    );\r\n}\r\n\r\nexport default ConfirmModal;","import React, {useEffect, useRef, useState} from 'react';\r\nimport Card from \"~/components/Card/Card\";\r\nimport  \"./Column.scss\";\r\nimport {Container, Draggable} from \"react-smooth-dnd\";\r\nimport {mapOrder} from \"~/utilities/sorts\";\r\nimport {FaPlus, FaTimes} from \"react-icons/fa\";\r\nimport {Button, ButtonGroup, Dropdown, Form} from \"react-bootstrap\";\r\nimport ConfirmModal from \"~/components/Commom/ConfirmModal\";\r\nimport {cloneDeep} from \"lodash\";\r\n\r\nfunction Column({column,onCardDrop,onUpdateColumn}) {\r\n    const [showConfirmModal,setShowConfirmModal]=useState(false)\r\n    const [columnTitle,setColumnTitle]=useState('')\r\n    const [isAddCard,setIsAddCard]=useState(false)\r\n    const [valueNewCard,setValueNewCard]=useState('')\r\n    const newCardRef=useRef()\r\n    useEffect(()=>{\r\n        setColumnTitle(column.title)\r\n    },[column.title])\r\n    const cards = mapOrder(column.cards, column.cardOrder, 'id')\r\n    const handleRemoveColumn=(type)=>{\r\n        (type ==='close') && setShowConfirmModal(false);\r\n        if(type==='confirm'){\r\n            const newColumn={\r\n                ...column,\r\n                _destroy:true\r\n            }\r\n            onUpdateColumn(newColumn)\r\n            setShowConfirmModal(false);\r\n        }\r\n    }\r\n    const selectAllInlineTex=(e)=>{\r\n        e.target.focus();\r\n        e.target.select()\r\n    }\r\n    const handleColumnTitleBlur=()=>{\r\n        const newColumn={\r\n            ...column,\r\n            title:columnTitle\r\n        }\r\n        onUpdateColumn(newColumn)\r\n    }\r\n    const handleAddCard=()=>{\r\n        const newCardToAdd={\r\n            id:Math.random().toString(36).substr(2,5),\r\n            boardId:column.boardId,\r\n            columnId:column.id,\r\n            title:valueNewCard,\r\n            cover:null\r\n        }\r\n        let newColumn=cloneDeep(column)\r\n        newColumn.cards.push(newCardToAdd)\r\n        newColumn.cardOrder.push(newCardToAdd.id)\r\n        // truyền lên board Content\r\n        onUpdateColumn(newColumn)\r\n\r\n        // clear up\r\n        setValueNewCard('')\r\n        setIsAddCard(false)\r\n\r\n      }\r\n    return (\r\n        <div className=\"column\">\r\n\r\n            <header className='col-title column-drag-handle d-flex justify-content-between align-items-center'>\r\n                <div className='' >\r\n                    <Form.Control\r\n                        size='md'\r\n                        type='text'\r\n                        placeholder='Enter column title'\r\n                        className='minhtrung-content-editable '\r\n                        value={columnTitle}\r\n                        spellCheck={false}\r\n                        onChange={(e)=>setColumnTitle(e.target.value)}\r\n                        onClick={selectAllInlineTex}\r\n                        onBlur={handleColumnTitleBlur}\r\n                        onMouseDown={e=>e.preventDefault()}\r\n                       onKeyDown={event => (event.key==='Enter')&& handleColumnTitleBlur()}\r\n                    />\r\n                </div>\r\n\r\n                <div className='col-more'>\r\n                    <Dropdown as={ButtonGroup}>\r\n                        <Dropdown.Toggle variant=\"success\"\r\n                                         className='dropdown-btn'\r\n                                         id=\"dropdown-split-basic\" size='sm' />\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item >Add task</Dropdown.Item>\r\n                            <Dropdown.Item onClick={()=>setShowConfirmModal(true)} >Remove Column</Dropdown.Item>\r\n                            <Dropdown.Item >Move all cards in this column</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </div>\r\n            </header>\r\n            <div className='card-list'>\r\n                <Container\r\n                    // onDragStart={e => console.log(\"drag started\", e)}\r\n                    // onDragEnd={e => console.log(\"drag end\", e)}\r\n                    // onDragEnter={() => {\r\n                    //     console.log(\"drag enter:\", column.id);\r\n                    // }}\r\n                    // onDragLeave={() => {\r\n                    //     console.log(\"drag leave:\", column.id);\r\n                    // }}\r\n                    // onDropReady={p => console.log('Drop ready: ', p)}\r\n                    groupName=\"col\"\r\n                    onDrop={dropResult=>onCardDrop(column.id,dropResult)}\r\n                    getChildPayload={index => cards[index]}\r\n                    dragClass=\"card-ghost\"\r\n                    dropClass=\"card-ghost-drop\"\r\n                    dropPlaceholder={{\r\n                        animationDuration: 150,\r\n                        showOnTop: true,\r\n                        className: 'drop-preview'\r\n                    }}\r\n                    dropPlaceholderAnimationDuration={200}\r\n                >\r\n                    {\r\n                        !!column.cards && column.cards.map((item, index) => (\r\n                            <Draggable key={index}>\r\n                                <Card card={item}/>\r\n                            </Draggable>\r\n\r\n                        ))\r\n                    }\r\n                </Container>\r\n            </div>\r\n            {\r\n                isAddCard && (\r\n                    <div className='add-new-card-area'>\r\n                        <Form.Control\r\n                            size='md'\r\n                            as='textarea'\r\n                            rows='3'\r\n                            placeholder='Enter new card'\r\n                            className='input-enter-card'\r\n                            value={valueNewCard}\r\n                            onChange={e=>setValueNewCard(e.target.value)}\r\n                            ref={newCardRef}\r\n                            onKeyDown={event => (event.key==='Enter')&& handleAddCard()}\r\n                        />\r\n                        <div className='d-flex justify-content-between align-items-center'>\r\n                            <Button variant='outline-primary'\r\n                                    onClick={handleAddCard}\r\n                            >Add</Button>\r\n                            <FaTimes className='cancel-new-card'\r\n                               onClick={()=>setIsAddCard(false)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                !isAddCard && (\r\n                    <footer className='d-flex align-items-center justify-content-center'\r\n                            onClick={()=>setIsAddCard(true)}>\r\n                        <FaPlus /> Add new task</footer>\r\n                )\r\n            }\r\n\r\n            <ConfirmModal\r\n                show={showConfirmModal}\r\n                title='Remove Column'\r\n                content={`Are you sure you want to remove columns ${column.title} ?`}\r\n                onAction={handleRemoveColumn} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Column;","export const  initialData ={\r\n    boards:[\r\n        {\r\n            id:'board-1',\r\n            columnOrder:['column-1', 'column-2','column-3'],\r\n            columns:[\r\n                {\r\n                    id:'column-1',\r\n                    boardId:'board-1',\r\n                    title:'Todo',\r\n                    cardOrder:['card-1', 'card-2','card-3','card-4','card-5'],\r\n                    cards:[\r\n                        {\r\n                            id:'card-1',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:\"https://placeimg.com/640/480/any\"\r\n                        },\r\n                        {\r\n                            id:'card-2',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:null\r\n                        }\r\n                        ,  {\r\n                            id:'card-3',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:null\r\n                        }\r\n                        ,  {\r\n                            id:'card-4',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:null\r\n                        },\r\n                        {\r\n                            id:'card-5',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:null\r\n                        }\r\n\r\n                    ]\r\n                },\r\n                {\r\n                    id:'column-2',\r\n                    boardId:'board-1',\r\n                    title:'Doing',\r\n                    cardOrder:['card-1', 'card-2','card-3','card-4','card-5'],\r\n                    cards:[\r\n                        {\r\n                            id:'card-1',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:null\r\n                        },\r\n                        {\r\n                            id:'card-2',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:null\r\n                        }\r\n                        ,  {\r\n                            id:'card-3',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:\"https://placeimg.com/640/480/any\"\r\n                        }\r\n                        ,  {\r\n                            id:'card-4',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:null\r\n                        },\r\n                        {\r\n                            id:'card-5',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:null\r\n                        }\r\n\r\n                    ]\r\n                },\r\n                {\r\n                    id:'column-3',\r\n                    boardId:'board-1',\r\n                    title:'Complete',\r\n                    cardOrder:['card-1', 'card-2','card-3','card-4','card-5'],\r\n                    cards:[\r\n                        {\r\n                            id:'card-1',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:null\r\n                        },\r\n                        {\r\n                            id:'card-2',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:null\r\n                        }\r\n                        ,  {\r\n                            id:'card-3',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:null\r\n                        }\r\n                        ,  {\r\n                            id:'card-4',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:null\r\n                        },\r\n                        {\r\n                            id:'card-5',\r\n                            boardId:'board-1',\r\n                            columnId:'column-1',\r\n                            title:'Write PRD',\r\n                            priority:'highly',\r\n                            description:'hahalll',\r\n                            cover:null\r\n                        }\r\n\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}","\r\nexport const applyDrag = (arr, dragResult) => {\r\n    const { removedIndex, addedIndex, payload } = dragResult;\r\n    if (removedIndex === null && addedIndex === null) return arr;\r\n\r\n    const result = [...arr];\r\n    let itemToAdd = payload;\r\n\r\n    if (removedIndex !== null) {\r\n        itemToAdd = result.splice(removedIndex, 1)[0];\r\n    }\r\n\r\n    if (addedIndex !== null) {\r\n        result.splice(addedIndex, 0, itemToAdd);\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport const generateItems = (count, creator) => {\r\n    const result = [];\r\n    for (let i = 0; i < count; i++) {\r\n        result.push(creator(i));\r\n    }\r\n    return result;\r\n};","import React, {useEffect, useRef, useState} from 'react'\r\nimport \"./BoardContent.scss\"\r\nimport Column from \"~/components/Column/Column\";\r\nimport { Container, Draggable } from \"react-smooth-dnd\";\r\nimport {Container as BSContainer, Row, Col, Form, Button} from \"react-bootstrap\"\r\nimport {initialData} from \"~/actions/initalData\";\r\nimport {isEmpty} from \"lodash\";\r\nimport {mapOrder} from \"~/utilities/sorts\";\r\nimport {applyDrag} from \"~/utilities/dragDrop\";\r\nimport {FaCross, FaPlus, FaTerminal, FaTimes, FaTimesCircle} from \"react-icons/fa\";\r\nimport column from \"~/components/Column/Column\";\r\n\r\n\r\nfunction BoardContent() {\r\n    const [board,setBoard]=useState({})\r\n    const [columns,setColumns] = useState([])\r\n    const [isOpenNewColForm,setIsOpenNewColForm]=useState(false)\r\n    const [newColTitle,setNewColTitle]=useState('')\r\n\r\n    const newColInputRef=useRef()\r\n    useEffect(()=>{\r\n        const boardFromDB=initialData.boards.find(board => board.id==='board-1')\r\n        if(boardFromDB){\r\n            setBoard(boardFromDB)\r\n            // sort Column\r\n\r\n            setColumns(mapOrder(boardFromDB.columns,boardFromDB.columnOrder,'id'))\r\n        }\r\n    },[       ])\r\n\r\n    const onColumnDrop=(dropResult)=>{\r\n        let newColumns=[...columns]\r\n        // set lai ccolumn\r\n\r\n        newColumns=applyDrag(newColumns,dropResult)\r\n        let newBoard={...board}\r\n        // cập nhật columnnOrder bang các id sau khi keo tha\r\n        newBoard.columnOrder=newColumns.map(item=>item.id)\r\n        newBoard.columns=newColumns\r\n        setColumns(newColumns)\r\n        setBoard(newBoard)\r\n        // console.log(newColumns)\r\n        // console.log(newBoard)\r\n    }\r\n    const onCardDrop = (columnId,dropResult) => {\r\n        if(dropResult.removedIndex !=null || dropResult.addedIndex !=null)\r\n        {\r\n            let newColumns=[...columns]\r\n            let currentColumn=newColumns.find((item=>item.id===columnId))\r\n\r\n            currentColumn.cards=applyDrag(currentColumn.cards,dropResult)\r\n            currentColumn.cardOrder=currentColumn.cards.map(i=>i.id)\r\n            setColumns(newColumns)\r\n            console.log( currentColumn)\r\n        }\r\n\r\n    }\r\n    const handleAddNewColumn=()=>{\r\n        //    newColInputRef.current.focus();\r\n        const newColumnToAdd={\r\n            id:Math.random().toString(36).substr(2,5),\r\n            boardId:board.id,\r\n            title:newColTitle.trim(),\r\n            cardOrder:[],\r\n            cards:[]\r\n        }\r\n        let newColumns=[...columns]\r\n        newColumns.push(newColumnToAdd)\r\n\r\n        let newBoard={...board}\r\n        // cập nhật columnnOrder bang các id sau khi keo tha\r\n        newBoard.columnOrder=newColumns.map(item=>item.id)\r\n        newBoard.columns=newColumns\r\n        setColumns(newColumns)\r\n        setBoard(newBoard)\r\n\r\n\r\n        //clear inout\r\n      setNewColTitle('')\r\n        setIsOpenNewColForm(false)\r\n\r\n\r\n    }\r\n\r\n    const handleUpdateColumn=(newColUpdate)=>{\r\n        const columnIdToUpdate=newColUpdate.id\r\n        let newColumns=[...columns]\r\n        const columnIndexToUpdate=newColumns.findIndex(i=>i.id===newColUpdate.id)\r\n        console.log('xóa ở: ',columnIndexToUpdate)\r\n        if(newColUpdate._destroy){\r\n            newColumns.splice(columnIndexToUpdate,1)\r\n            setColumns(newColumns)\r\n        }else{\r\n            newColumns.splice(columnIndexToUpdate,1,newColUpdate)\r\n            setColumns(newColumns)\r\n        }\r\n\r\n       // console.log(columns)\r\n        let newBoard={...board}\r\n        newBoard.columnOrder=newColumns.map(item=>item.id)\r\n        newBoard.columns=newColumns\r\n\r\n        setBoard(newBoard)\r\n        console.log(newColUpdate)\r\n    }\r\n\r\n    return (\r\n      isEmpty(board)?(\r\n          <div className=\"not-found\">Not FOUND</div>\r\n      ):(\r\n          <div className=\"board-content \">\r\n              <Container\r\n                  orientation=\"horizontal\"\r\n                  onDrop={onColumnDrop}\r\n                  getChildPayload={index =>columns[index]}\r\n                  dragHandleSelector=\".column-drag-handle\"\r\n                  dropPlaceholder={{\r\n                      animationDuration: 150,\r\n                      showOnTop: true,\r\n                      className: 'column-drop-preview'\r\n                  }}\r\n              >\r\n                  {\r\n                      !!columns && columns.map((col,index)=> (\r\n                          <Draggable\r\n\r\n                              key={index}>\r\n                              <Column\r\n                                  column={col}\r\n                                  onCardDrop={onCardDrop}\r\n                                  onUpdateColumn={handleUpdateColumn}\r\n\r\n                              />\r\n                          </Draggable>\r\n\r\n                      ))\r\n                  }\r\n              </Container>\r\n              <BSContainer className='trello-minhtrung-container'  >\r\n                  {!isOpenNewColForm && (\r\n                      <Row>\r\n                          <Col className='add-new-column'\r\n                               onClick={()=>{\r\n                                   setIsOpenNewColForm(true)\r\n\r\n                               }}\r\n                          >\r\n                              <FaPlus />   Add new column\r\n                          </Col>\r\n                      </Row>\r\n                  )}\r\n                  {\r\n                      !!isOpenNewColForm  && ( <Row>\r\n                          <Col className='enter-new-column'>\r\n                              <Form.Control\r\n                                  size='md'\r\n                                  type='text'\r\n                                  placeholder='Enter new column title'\r\n                                  className='input-enter-new-column '\r\n                                  value={newColTitle}\r\n                                  onChange={e=>setNewColTitle(e.target.value)}\r\n                                    ref={newColInputRef}\r\n                                  onKeyDown={event => (event.key==='Enter')&& handleAddNewColumn()}\r\n                              />\r\n                              <div className='d-flex justify-content-between align-items-center'>\r\n                                  <Button variant='outline-success'\r\n                                  onClick={handleAddNewColumn}\r\n                                  >Add</Button>\r\n                                  <FaTimes className='cancel-new-column'\r\n                                           onClick={()=>setIsOpenNewColForm(false)}\r\n                                  />\r\n                              </div>\r\n\r\n                          </Col>\r\n                      </Row>)\r\n                  }\r\n              </BSContainer>\r\n\r\n\r\n                   </div>\r\n      )\r\n    );\r\n}\r\n\r\nexport default BoardContent;","\n\nimport AppBar from \"~/components/AppBar/AppBar\";\nimport BoardBar from \"~/components/BoardBar/BoardBar\";\nimport BoardContent from \"~/components/BoardContent/BoardContent\";\nimport React from \"react\";\nimport '~/scss/style.scss';\nfunction App() {\n\n  return (\n    <div className=\"trello-minhtrung-master\">\n        <AppBar />\n        <BoardBar />\n        <BoardContent  />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport './App.scss'\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}